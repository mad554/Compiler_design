%{
#include <stdio.h>
%}

identifier    [a-zA-Z_][a-zA-Z0-9_]*
number        [0-9]+

%%
"#".*                { printf("%s → PREPROCESSOR\n", yytext); }

"int"|"float"|"char"|"double"|"while"|"for"|"if"|"else"|
"return"|"void"|"switch"|"break"|"continue"|"struct"|"typedef"|"goto"
                    { printf("%s → KEYWORD\n", yytext); }

{identifier}\(       { printf("%s → FUNCTION\n", yytext); }
{identifier}         { printf("%s → IDENTIFIER\n", yytext); }
{number}             { printf("%s → NUMBER\n", yytext); }

"="                  { printf("%s → ASSIGNMENT\n", yytext); }
"<"|">"|"=="|"<="|">="|"<>" 
                    { printf("%s → RELATIONAL\n", yytext); }

\".*\"               { printf("%s → STRING\n", yytext); }

"{"                  { printf("BLOCK BEGIN\n"); }
"}"                  { printf("BLOCK END\n"); }

"/*"([^*]|\*+[^/])*\*+"/"  { printf("COMMENT\n"); }

[ \t\n]+             { /* skip whitespace */ }

.                    { printf("%s → SYMBOL\n", yytext); }
%%

int main(void) {
    yylex();
    return 0;
}
